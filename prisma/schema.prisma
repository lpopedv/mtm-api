generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  full_name     String   @db.VarChar(150)
  email         String   @unique @db.VarChar(150)
  password_hash String
  super_user    Boolean  @default(false)
  insertedAt    DateTime @default(now())
  updatedAt     DateTime @updatedAt

  categories   Category[]
  transactions Transaction[]

  @@map("users")
}

model Category {
  id         Int      @id @default(autoincrement())
  title      String   @db.VarChar(150)
  user_id    Int
  insertedAt DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])

  transactions Transaction[]

  @@map("categories")
}

model Card {
  id             Int      @id @default(autoincrement())
  title          String   @db.VarChar(150)
  limit          Float
  expirationDate DateTime
  bestDayToBuy   Int
  insertedAt     DateTime @default(now())
  updatedAt      DateTime @updatedAt

  transactions Transaction[]

  @@map("cards")
}

model Transaction {
  id                Int      @id @default(autoincrement())
  user_id           Int
  category_id       Int
  card_id           Int?
  title             String   @db.VarChar(200)
  type              String   @db.VarChar(150)
  value             Float
  date              DateTime @default(now())
  is_recurring      Boolean  @default(false)
  installment_count Int?
  insertedAt        DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user     User     @relation(fields: [user_id], references: [id])
  category Category @relation(fields: [category_id], references: [id])

  card Card? @relation(fields: [card_id], references: [id])

  installments Installment[]

  @@map("transactions")
}

model Installment {
  id             Int       @id @default(autoincrement())
  transaction_id Int
  number         Int
  due_date       DateTime?
  value          Float
  paid           Boolean   @default(false)
  insertedAt     DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  transaction Transaction @relation(fields: [transaction_id], references: [id])

  @@map("installments")
}
